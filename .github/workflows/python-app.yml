# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Hamster

on:
  push:
    branches: [ "fix/gh-actions" ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ self-hosted, macos ]
        arch: [ 'X64', 'ARM64' ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install py2app
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Generate app for intel architecture
      run: |
          uname -a
          python setup.py py2app
          mv dist dist-intel
      if: matrix.os == 'macos' && matrix.arch == 'X64'

    - name: Generate app for arm64 architecture
      run: |
        python setup.py py2app
        mv dist dist-arm64
      if: matrix.os == 'self-hosted' && matrix.arch == 'ARM64'

    - name: Convert dist-intel to DMG
      run: |
        hdiutil create -volname "Hamster" -srcfolder dist-intel -ov -format UDZO dist-intel/Hamster-intel.dmg
      if: matrix.os == 'macos' && matrix.arch == 'X64'

    - name: Convert dist-arm64 to DMG
      run: |
        hdiutil create -volname "Hamster" -srcfolder dist-arm64 -ov -format UDZO dist-arm64/Hamster-darwin.dmg
      if: matrix.os == 'self-hosted' && matrix.arch == 'ARM64'

    - name: Upload intel app
      uses: actions/upload-artifact@v2
      with:
        name: Hamster-macos-intel-x86_64
        path: dist-intel/Hamster-intel.dmg
      if: matrix.os == 'macos' && matrix.arch == 'X64'

    - name: Upload arm64 app
      uses: actions/upload-artifact@v2
      with:
        name: Hamster-macos-apple-arm64
        path: dist-arm64/Hamster-darwin.dmg
      if: matrix.os == 'self-hosted' && matrix.arch == 'ARM64'

    # Create a release for intel and arm64 apps
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.HAMSTER_APP_RELEASE_SECRET }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # Upload intel app to release
    - name: Upload Release Asset
      id: upload-release-asset-intel
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.HAMSTER_APP_RELEASE_SECRET }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-intel/Hamster-intel.dmg
        asset_name: Hamster-macos-intel-x86_64.dmg
        asset_content_type: application/x-diskcopy
      if: matrix.os == 'macos' && matrix.arch == 'X64'

    # Upload arm64 app to release
    - name: Upload Release Asset
      id: upload-release-asset-apple
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.HAMSTER_APP_RELEASE_SECRET }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-arm64/Hamster-darwin.dmg
        asset_name: Hamster-macos-apple-arm64.dmg
        asset_content_type: application/x-diskcopy
      if: matrix.os == 'self-hosted' && matrix.arch == 'ARM64'

